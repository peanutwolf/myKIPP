
bin/Debug/Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000009a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000009a  0000010e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000a20  00000000  00000000  00000110  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000770  00000000  00000000  00000b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  000012a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000007b  00000000  00000000  000012c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000043  00000000  00000000  0000133b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001a5  00000000  00000000  0000137e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001524  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000086  00000000  00000000  00001558  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000003b  00000000  00000000  000015de  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macinfo 00006b26  00000000  00000000  00001619  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ea e9       	ldi	r30, 0x9A	; 154
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a0 e6       	ldi	r26, 0x60	; 96
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a0 36       	cpi	r26, 0x60	; 96
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	16 d0       	rcall	.+44     	; 0x86 <main>
  5a:	1d c0       	rjmp	.+58     	; 0x96 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <test>:
#include "Lib.h"


void test(unsigned int i){
  5e:	df 93       	push	r29
  60:	cf 93       	push	r28
  62:	00 d0       	rcall	.+0      	; 0x64 <test+0x6>
  64:	cd b7       	in	r28, 0x3d	; 61
  66:	de b7       	in	r29, 0x3e	; 62
  68:	9a 83       	std	Y+2, r25	; 0x02
  6a:	89 83       	std	Y+1, r24	; 0x01
DDRB=i;
  6c:	e7 e3       	ldi	r30, 0x37	; 55
  6e:	f0 e0       	ldi	r31, 0x00	; 0
  70:	89 81       	ldd	r24, Y+1	; 0x01
  72:	80 83       	st	Z, r24
PORTB=0xFF;
  74:	e8 e3       	ldi	r30, 0x38	; 56
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	8f ef       	ldi	r24, 0xFF	; 255
  7a:	80 83       	st	Z, r24
}
  7c:	0f 90       	pop	r0
  7e:	0f 90       	pop	r0
  80:	cf 91       	pop	r28
  82:	df 91       	pop	r29
  84:	08 95       	ret

00000086 <main>:
#include <avr/io.h>
#include <Lib.h>


int main(void)
{
  86:	cf 93       	push	r28
  88:	df 93       	push	r29
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62


    while(1)

test(0XFF);
  8e:	8f ef       	ldi	r24, 0xFF	; 255
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	e5 df       	rcall	.-54     	; 0x5e <test>
  94:	fc cf       	rjmp	.-8      	; 0x8e <main+0x8>

00000096 <_exit>:
  96:	f8 94       	cli

00000098 <__stop_program>:
  98:	ff cf       	rjmp	.-2      	; 0x98 <__stop_program>
